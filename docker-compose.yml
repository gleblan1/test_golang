version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: crypto_tracker_db
    environment:
      POSTGRES_DB: crypto_tracker
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d
    networks:
      - crypto_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: .
      dockerfile: Dockerfile
      target: api
    container_name: crypto_tracker_api
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=crypto_tracker
      - DB_USER=postgres
      - DB_PASSWORD=password
      - API_PORT=8080
      - WORKER_INTERVAL=60
      - COINGECKO_API_URL=https://api.coingecko.com/api/v3
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - crypto_network
    restart: unless-stopped

  worker:
    build:
      context: .
      dockerfile: Dockerfile
      target: worker
    container_name: crypto_tracker_worker
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=crypto_tracker
      - DB_USER=postgres
      - DB_PASSWORD=password
      - WORKER_INTERVAL=60
      - COINGECKO_API_URL=https://api.coingecko.com/api/v3
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - crypto_network
    restart: unless-stopped

  migrate:
    image: migrate/migrate:latest
    container_name: crypto_tracker_migrate
    command: ["-path", "/migrations", "-database", "postgres://postgres:password@postgres:5432/crypto_tracker?sslmode=disable", "up"]
    volumes:
      - ./migrations:/migrations
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - crypto_network

volumes:
  postgres_data:

networks:
  crypto_network:
    driver: bridge 